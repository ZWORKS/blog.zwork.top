<?php $db = G('db');?>
<?php $starttime = G('starttime');?>
<?php $time = G('time');?>
<?php $forumlist = G('forumlist');?>
<?php $forumarr = G('forumarr');?>
<?php $fid = G('fid');?>
<?php $conf = G('conf');?>
<?php $static_version = $conf['static_version'];?>



<?php  echo xn_debug_info(); ?>

</div>



<?php include _include(APP_PATH.'view/htm/footer_nav.inc.htm');?>

	
	<?php if($user && $GG_reply){ ?>
	<div class="modal fade" id="GG_reply_reminder_box" tabindex="-1" role="dialog" aria-labelledby="GG_reply_reminder_box" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
					<h4 class="modal-title" id="GG_reply_reminder_box">新回复</h4>
				</div>
				<div class="modal-body">
					<ul>
						<?php foreach($GG_reply as $_GG_reply){ ?>
						<?php $GG_reply_user = user_read($_GG_reply['uid']);?>
						<li style="padding:0 3%;">
							<a href="<?php echo url('thread-'.$_GG_reply['tid']).'#'.$_GG_reply['pid'];?>" target="_blank"><?php echo $GG_reply_user['username'];?>刚刚回复了您。</a>
						</li>
						<?php } ?>
					</ul>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-success" data-dismiss="modal">关闭</button>
				</div>
			</div>
		</div>
	</div>
	<?php } ?>

<!--[if lt IE 9]>
<script>window.location = 'view/htm/browser.html';</script>
<![endif]-->


<script src="lang/<?php echo $conf['lang'];?>/bbs.js<?php echo $static_version;?>"></script>
<script src="<?php echo $conf['view_url'];?>js/jquery-3.1.0.js<?php echo $static_version;?>"></script>
<script src="<?php echo $conf['view_url'];?>js/tether.js<?php echo $static_version;?>"></script>
<script src="<?php echo $conf['view_url'];?>js/bootstrap.js<?php echo $static_version;?>"></script>
<script src="<?php echo $conf['view_url'];?>js/bootstrap-plugin.js<?php echo $static_version;?>"></script>
<script src="<?php echo $conf['view_url'];?>js/async.js<?php echo $static_version;?>"></script>
<script src="<?php echo $conf['view_url'];?>js/xiuno.js<?php echo $static_version;?>"></script>
<script src="<?php echo $conf['view_url'];?>js/form.js<?php echo $static_version;?>"></script>
<script>
var debug = DEBUG = <?php echo DEBUG; ?>;
var url_rewrite_on = <?php echo $conf['url_rewrite_on'];?>;
var forumarr = <?php echo xn_json_encode($forumarr);?>;
var fid = <?php echo $fid;?>;
</script>
<script src="<?php echo $conf['view_url'];?>js/bbs.js<?php echo $static_version;?>"></script>
<script>
var sg_sign_mobile = $('#sg_sign_mobile');
sg_sign_mobile.on('click', function() {
	var postdata = sg_sign_mobile.serialize();
	$.xpost(xn.url('sg_sign'), postdata, function(code, message) {
			$.alert(message);
			sg_sign_mobile.delay(2000).location(xn.url('sg_sign'));
	});
	return false;
});
</script>
<script>
// 版主管理：精华
$('.mod-button button.digest').on('click', function() {
	var modtid = $('input[name="modtid"]').checked();
	if(modtid.length == 0) return $.alert(lang.please_choose_thread);
	var radios = xn.form_radio('digest', {"0": "<?php echo lang('digest_0');?>", "1": "<?php echo lang('digest_1');?>","2": "<?php echo lang('digest_2');?>", "3": "<?php echo lang('digest_3');?>"});
	$.confirm("<?php echo lang('set_digest_thread');?>", function() {
		var tids = xn.implode('_', modtid);
		var digest = $('input[name="digest"]').checked();
		var postdata = {digest: digest};
		$.xpost(xn.url('mod-digest-'+tids), postdata, function(code, message) {
			if(code != 0) return $.alert(message);
			$.alert(message).delay(1000).location('');
		});
	}, {'body': '<p>'+"<?php echo lang('digest_level');?>"+'：'+radios+'</p>'});
})
</script>
<style>
#pm_dialog .modal-dialog { max-width: 726px;}
#pm_dialog .modal-body > dl { height: 100%;}
#pm_dialog .modal-body > dl > dt { padding: 8px; background: #eee; width: 150px;}
#pm_dialog .modal-body > dl > dd { padding: 8px; }
#pm_dialog .modal-body ul { list-style: none; margin:0px; padding: 0px; }
ul.recentlist li { line-height: 1.5rem; margin-bottom: 0.5rem; padding: 0.2rem;}
ul.recentlist li:hover { background: #fff; }
ul.recentlist li.active { background: #fff; }

@keyframes pm_flash {
	0% { opacity: 0; } 
	50% { opacity: 1;} 
	100% {opacity: 0;} 
} 
#pm_link i.icon-envelope-o.newpm { animation: pm_flash 1s linear infinite; webkit-animation: pm_flash 2s linear; pointer-events: none }
.pm-table { margin-bottom: 0.5rem;}
.pm-left-msg { width: 90%; float: left; background: #DBDBDB; border-radius: 8px; padding: 0.2rem 0.5rem; }
.pm-right-msg { width: 90%; float: right; background: #6FCE71; border-radius: 8px; padding: 0.2rem 0.5rem; }
.pm-right-msg .text-grey { color: #A6EBA7 !important}
.pm-right-msg a.delete { display: none; }
.pm-right-msg:hover a.delete { display: inline; }
</style>

<script src="<?php echo $conf['view_url'];?>js/vue.js<?php echo $static_version;?>"></script>

<!--
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#pm_dialog">Open modal for @mdo</button>
-->

<script type="text/x-template" id="tpl_pm">

<table width="100%" v-if="pm.senduid != user.uid" class="pm-table">
	<tr>
		<td width="36">
                        <a :href="cuser.uid"><img :src="cuser.avatar_url" class="avatar-sm" /></a>
		</td>
		<td>
                        <div class="pm-left-msg">
			        {{ pm.message }} <span class="text-muted small"> - {{ pm.create_date_fmt }}</span>
                        </div>
		</td>
	</tr>
</table>
<table width="100%" class="pm-table"  v-else>
        <tr>
		<td>
                        <div class="pm-right-msg">
                                {{ pm.message }} <span class="text-grey small"> - {{ pm.create_date_fmt }}</span>
                                <a href="javascript:void(0);" @click="delete_pm(pm)" class="m-l-sm delete" style="float: right;">
                                        <i class="icon-remove text-danger"></i>
                                </a>
                        </div>
		</td>
		<td width="36">
                        <a :href="user.uid"><img :src="user.avatar_url" class="avatar-sm" /></a>
		</td>
	</tr>
</table>
</script>


<div class="modal fade" id="pm_dialog" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
  	<div class="modal-content">
  	  <div class="modal-header">
  	  	<button type="button" class="close" data-dismiss="modal">
  	  	        <span aria-hidden="true">&times;</span>
  	  	</button>
                <h5 class="modal-title" style="text-align: center;">{{ cuser.username }}</h5>
  	  </div>
  	  <div class="modal-body" style="width: 724px;">
                <dl class="row" style="">
                        <dt class="vtop">
                                <div class="text-center m-y-1">
                                        <img src="<?php echo $user['avatar_url'];?>" class="avatar" />
                                        <br><?php echo $user['username'];?>
                                </div>
                                <ul class="recentlist">
                                        <li v-for="(user,index) in recentlist" @click="change_user(user.uid)" :class="{active: user.uid == cuid}" style="cursor:pointer">
                                                <img :src="user.avatar_url" class="avatar-xs" />{{ user.username }}
                                        </li>
                                </ul>
                        </dt>
                        <dd class="vtop">
                                <div style="height: 504px; overflow: hidden; display: flex; display: -webkit-flex; flex-direction: column; ">
                                        <div id="pmlist" ref="pmlist" style="flex-grow: 0; max-height: 100%; overflow: auto;" >
                                                <ul>
                                                        <li v-for="(pm,index) in pmlist" :pmid="pm.pmid">
                                                                <comp-pm :pm="pm" :is_last="index === pmlist.length - 1" :user="user" :cuser="cuser"></comp-pm>
                                                        </li>
                                                </ul>
                                        </div>
                                        <div style="height: 100px;">
                                                <textarea style="width: 100%; height: 60px;" v-model="textarea" ref="textarea"></textarea>         
                                                <p class="text-left">
                                                        <button @click="create_pm()" type="button" class="btn btn-primary" id="submit" data-loading-text="<?php echo lang('submiting');?>..." style="width: 10rem;"><?php echo lang('confirm');?></button>
                                                </p>
                                        </div>
                                </div>
                        </dd>
                </dl>
  	  </div>
  	</div>
  </div>
</div>

<br>
<br>
<br>
<br>
<br>

<?php if($uid) { ?>

<script>
var user = <?php echo json_encode($user);?>;
var uid = user.uid ? user.uid : 0;  // 我的 uid
var jpm_link = $('#pm_link');
jpm_link.on('click', function() {
        show_pm_dialog();
});

// 组件
Vue.component('comp-pm', {
	props: ['pm', 'is_last', 'user', 'cuser'],
	template: '#tpl_pm',
        inherit: true,
	methods: {
	  	delete_pm: function(pm) {
	  		if(!window.confirm('确定删除？')) return;
                        $.xpost(xn.url('pm-delete'), {pmid: pm.pmid}, function(code, message) {
                                if(code == 0) {
                                        var index = app.pmlist.indexOf(pm); 
			                app.pmlist.splice(index, 1);
                                } else {
                                        alert(message);
                                }
                        });
			//app.pmlist = app.pmlist.filter(t => t.pmid != 5)
			//app.pmlist.$remove(pm); // vue 2.0 废弃
	  	}
  	}
});

app = new Vue({
	el: '#pm_dialog',
	data: {
                uid: uid,
                cuid: 0,
                cuser: {},
                user: user,
                recentlist: [],        // 最近联系人列表 = 临时发起对话的列表 + 从服务端获取的列表
                recent_active_list: [],  // 临时发起对话的列表
                recent_request_list: [], // 从服务端获取的列表
                pmlist: [],
                pmlists: {},            // 用来缓存短消息列表
                textarea: '',
                recent_loading: -1,      // -1: 从未加载过，1: 正在加载 0: 加载完成
                pmlist_loading: -1,      // -1: 从未加载过，1: 正在加载 0: 加载完成
	},
	computed: {
                recentlist: function() {
                        var arrlist = [];
                        Array.prototype.push.apply(arrlist, this.recent_active_list);
                        Array.prototype.push.apply(arrlist, this.recent_request_list);
                        return arrlist;
                }
	},
        watch: {
                cuid: function() {
                        if(!this.cuid) return;
                        var cuid = this.cuid;
                        var pmlists = this.pmlists;
                        
                        var _this = this;
                        var on_cuid_change = function(cuid) {
                                _this.pmlist = _this.pmlists["uid_"+cuid];
                                _this.cuser = _this.recentlist.find(function(user) { return user.uid == cuid; });
                        }
                        if(!pmlists["uid_"+cuid]) {
                                this.update_pm_list(cuid, function(cuid) {
                                        on_cuid_change(cuid);
                                });
                        } else {
                                on_cuid_change(cuid);
                        }
                },
        },
	methods: {
                change_user: function(uid) {
                        this.cuid = uid;
                },
		create_pm: function(pmid) {
                        var postdata = {
                                touid: this.cuid,
                                message: this.textarea,
                        };
                        var _this = this;
                        $.xpost(xn.url('pm-create'), postdata, function(code, message) {
                                var pmid = message.pmid;
                                var newpm = {
                                        pmid: message.pmid,
                                        uid: user.uid,
                                        senduid: user.uid,
                                        username: user.username,
                                        avatar_url: user.avatar_url,
                                        create_date_fmt: '刚才',
                                        message: message.message
                                }
                                _this.pmlist.push(newpm);
                                _this.textarea = '';
                                _this.$refs.textarea.focus();
                                var pmlist = _this.$refs.pmlist;
                                pmlist.scrollTop = 100000;
                        });
		},
                // 更新最近联系人列表
                update_recent_list: function(callback) {
                        this.recent_loading = 1;
                        var _this = this;
                        $.xget(xn.url('pm-recent_list'), function(code, message) {
                                if(code == 0) {
                                        _this.recent_request_list = message;
                                        if(callback) callback(message);
                                }
                                _this.recent_loading = 0;
                        });
                },
                // 更新短消息列表
                update_pm_list: function(cuid, callback) {
                        this.pmlist_loading = 1;
                        var _this = this;
                        $.xget(xn.url('pm-list-'+uid+'-'+cuid), function(code, message) {
                                if(code == 0) {
                                        // this.   xpmlists["uid_"+cuid] = message;
                                        Vue.set(_this.pmlists, "uid_"+cuid, message);
                                        if(callback) callback(cuid, message);
                                } else {
                                        alert(message);
                                }
                                _this.pmlist_loading = 0;
                        });
                },
                add_recent_active_user: function(user) {
                        if(user && user.uid) {
                                // 需要去除重复
                                if(this.recent_active_list.findIndex(function(v) { return v.uid == user.uid; }) == -1) {
                                        this.recent_active_list.unshift({
                                                uid: user.uid,
                                                username: user.username,
                                                avatar_url: user.avatar_url,
                                                count: 0
                                        });
                                }
                        }
                }
	},
       /*
        updated: function() {

	},
        // 窗口弹出的时候才需要初始化
        mounted: function() {
                //this.change_user(1);
        }*/
});
//app.change_user(1);



// 定时请求数据
var xn_loop_get = function(url, callback) {
        this.url = url;
        this.callback = callback;
};
xn_loop_get.prototype.init_delay = debug ? 5 : 4;
xn_loop_get.prototype.delay = xn_loop_get.prototype.init_delay;
xn_loop_get.prototype.t = null;
xn_loop_get.prototype.cleartimeout = function() {
        if(this.t) {
                clearTimeout(this.t);
                this.t = null;
        }
}
xn_loop_get.prototype.request = function(n) {
        var _this = this;
        this.cleartimeout();
        this.t = setTimeout(function() {
                $.xget(_this.url, function(code, message) {
                       // 表示没有消息，延长请求的时间
                        if(code == 0) {
                                _this.delay *= 2;
                                _this.callback(message);
                        // 如果有消息，则缩短消息更新的时间。
                        } else if(code == 1) {
                                _this.delay = _this.init_delay;
                                _this.callback(message);
                        // 如果发生错误，延迟变得更长
                        } else {
                                _this.delay *= 4;
                        }
                        _this.request();
                });
        }, (n !== undefined ? n : this.delay) * 1000);
};

// 重设 loop 时间
xn_loop_get.prototype.set_delay = function(seconds) {
        //seconds = xn.intval(seconds);
        if(this.delay > seconds) {
                this.delay = seconds;
                this.cleartimeout();
                this.request();
        }
}

// 定时请求是否有新消息。更新图标
var newpmreq = new xn_loop_get(xn.url('pm-new'), function(message) {
        // 如果发现对话框弹出了，则更新最近列表
        if(message == 0) {
                jpm_link.removeClass('newpm');
        } else if(message > 0) {
                jpm_link.addClass('newpm');
                // 如果对话框被弹出，加快请求节奏
                if(!$('#pm_dialog').is(':hidden')) {
                        // 取列表
                        app.update_recent_list();
                // 如果对话框没弹出，放慢请求节奏
                } else {
                        newpmreq.set_delay(20);
                }
        }
});

// 对话框弹出，加快请求节奏
$('#pm_dialog').on('show.bs.modal', function () {
        newpmreq.request(0);
        newpmreq.set_delay(newpmreq.init_delay);
})

// 对话框关闭，放慢请求节奏
$('#pm_dialog').on('hidden.bs.modal', function () {
        newpmreq.set_delay(10);
})
//$('#pm_dialog').modal('show');

// 给对方发但消息
// {uid: 3, username: "Locy", avatar_url: "view/img/3.png", count: 0}

// 如果 uid 不在 recent_list 中，则远程获取用户信息，并且放入到 active_list 当中
function show_pm_dialog(cuid) {

        var func = function() {
                 // 指定某一个用户
                if(cuid) {
                        app.cuid = cuid;
                // 默认第一个用户，前面是异步 todo:
                } else {
                        app.cuid = app.recentlist.length > 0 ? app.recentlist[0].uid : 0;
                }
        }
        // 如果为初始化过，则初始化
        if(app.recent_loading == -1) {
                // 从服务端获取最近联系人
                app.update_recent_list(function() {
                        func();
                });
        } else {
               func();
        }

        $('#pm_dialog').modal('show');

        return false;
}
</script>

<?php } ?><script>
function xn_read_unread(tids, tid) {
	
	// 当前时间
	var time = xn.time();
	
	// 多长时间内的主题为最新主题
	var time_range = 86400 * 3;
	
	// 三天内的 tids
	var recent_tids = $.pdata('recent_tids') || {};
	
	// 已读的 tids
	var view_tids = $.pdata('view_tids') || {};
	// 提取列表页的 tid
	function fetch_recent_tids(tids) {
		var changed = false;
		$.each(tids, function(tid, last_date) {
			if(time - last_date < time_range) {
				recent_tids[tid] = last_date;
				changed = true;
			}
		});
		if(changed) $.pdata('recent_tids', recent_tids);
	}
	
	// 清理最近的 tid
	function gc_recent_tids() {
		var changed = false;
		$.each(recent_tids, function(tid, last_date) {
			if(time - last_date > time_range) {
				delete recent_tids[tid];
				changed = true;
			}
		});
		if(changed) $.pdata('recent_tids', recent_tids);
	}
	
	function gc_view_tids() {
		var changed = false;
		$.each(view_tids, function(tid, last_date) {
			if(!recent_tids[tid]) {
				delete view_tids[tid];
				changed = true;
			}
		});
		if(changed) $.pdata('view_tids', view_tids);
	}
	
	function save_view_tid(tid) {
		if(!recent_tids[tid]) return;
		view_tids[tid] = time;
		$.pdata('view_tids', view_tids);
	}
	
	if(tids) {
		fetch_recent_tids(tids);
		gc_recent_tids();
		//gc_view_tids();
	}
	if(tid) save_view_tid(tid);
	
	// 三天内的主题标记为已读
	
	// 遍历主题列表，标记最近的，并且未读的为加粗

	$('tr.thread').each(function() {
		var jthis = $(this);
		var tid = jthis.attr('tid');
		if(recent_tids[tid] && recent_tids[tid] > xn.intval(view_tids[tid])) {
			jthis.find('div.subject').addClass('text-bold');
		}
	});
}

</script>

</div>
</body>
</html>
<!-- Piwik -->
<script type="text/javascript">
  var _paq = _paq || [];
  // tracker methods like "setCustomDimension" should be called before "trackPageView"
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="//localhost/piwik/";
    _paq.push(['setTrackerUrl', u+'piwik.php']);
    _paq.push(['setSiteId', '2']);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
<!-- End Piwik Code -->
<?php echo cron_run();?>